#pragma once
#include "NativeGameplayTags.h"

// Tier tags are used to determine the difficulty of an actor. Normal -> Elite -> Champion -> Boss
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_TIER_NORMAL);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_TIER_ELITE);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_TIER_CHAMPION);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_TIER_BOSS);

// Affiliation tags are used to determine if two actors are friendly, neutral, or hostile to each other
// These are hierarchical tags, so we have humans, animals, and monsters, and then we have specific tags for each type of human, animal, or monster
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_HUMAN);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_HUMAN_VALIAN); // Citizens of the Vale Alliance
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_HUMAN_TARSIS); // Citizens of the Tarsis Empire
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_HUMAN_AURELIAN); // Citizens of the Aurelian Kingdom
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_HUMAN_BLACKROSE); // Member of the Black Rose Legion
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_HUMAN_BANDIT); // Bandits

UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL_CARNIVORE);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL_CARNIVORE_WOLF);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL_CARNIVORE_BEAR);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL_HERBIVORE);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL_HERBIVORE_DEER);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_ANIMAL_HERBIVORE_RABBIT);

UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_MONSTER);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_MONSTER_UNDEAD);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_MONSTER_UNDEAD_SKELETON);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_MONSTER_UNDEAD_ZOMBIE);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_MONSTER_WEREWOLF);
UE_DECLARE_GAMEPLAY_TAG_EXTERN(AI_AFFILIATION_MONSTER_VAMPIRE);

// Function to convert tier tag to int. Normal = 1, Elite = 2, Champion = 3, Boss = 4.
// If the tag is not a valid tier tag, return -1.
int32 GetAITierInt(const FGameplayTag &TierTag);
